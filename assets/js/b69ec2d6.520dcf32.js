"use strict";(self.webpackChunkdev_docs=self.webpackChunkdev_docs||[]).push([[9137],{4429:(a,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=s(5893),t=s(1151);const i={sidebar_position:1,id:"databases-introduction",title:"Intro",tags:["Databases","SQL","NoSql"]},r=void 0,l={id:"database/databases-introduction",title:"Intro",description:"Databases are systems designed to store, manage, and retrieve data. They are fundamental for applications requiring data persistence and retrieval. There are two main types of databases: SQL (relational) and NoSQL (non-relational).",source:"@site/docs/database/intro.md",sourceDirName:"database",slug:"/database/databases-introduction",permalink:"/garden/database/databases-introduction",draft:!1,unlisted:!1,tags:[{label:"Databases",permalink:"/garden/tags/databases"},{label:"SQL",permalink:"/garden/tags/sql"},{label:"NoSql",permalink:"/garden/tags/no-sql"}],version:"current",lastUpdatedBy:"minortypo",lastUpdatedAt:1725023409,formattedLastUpdatedAt:"Aug 30, 2024",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"databases-introduction",title:"Intro",tags:["Databases","SQL","NoSql"]},sidebar:"docs",previous:{title:"Database",permalink:"/garden/category/database"},next:{title:"MongoDB",permalink:"/garden/category/mongodb"}},o={},d=[{value:"SQL - Relational Databases",id:"sql---relational-databases",level:3},{value:"Characteristics:",id:"characteristics",level:4},{value:"Examples:",id:"examples",level:4},{value:"Use Cases:",id:"use-cases",level:4},{value:"NoSQL Databases (Non-relational Databases)",id:"nosql-databases-non-relational-databases",level:3},{value:"Characteristics:",id:"characteristics-1",level:4},{value:"Types and Examples:",id:"types-and-examples",level:4},{value:"Use Cases:",id:"use-cases-1",level:4},{value:"Comparison of PostgreSQL and MongoDB",id:"comparison-of-postgresql-and-mongodb",level:3}];function c(a){const e={h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:"Databases are systems designed to store, manage, and retrieve data. They are fundamental for applications requiring data persistence and retrieval. There are two main types of databases: SQL (relational) and NoSQL (non-relational)."}),"\n",(0,n.jsx)(e.h3,{id:"sql---relational-databases",children:"SQL - Relational Databases"}),"\n",(0,n.jsx)(e.p,{children:"SQL (Structured Query Language) databases are relational databases that use a structured schema to define data and its relationships. They are designed around tables (or relations), where data is organized into rows and columns."}),"\n",(0,n.jsx)(e.h4,{id:"characteristics",children:"Characteristics:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Schema-based:"})," Data is organized in a predefined schema, which defines tables, columns, and data types."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"ACID Compliance:"})," Ensures atomicity, consistency, isolation, and durability of transactions."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Query Language:"})," Uses SQL for querying and managing data."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Relationships:"})," Supports complex queries and relationships between tables using foreign keys."]}),"\n"]}),"\n",(0,n.jsx)(e.h4,{id:"examples",children:"Examples:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"PostgreSQL:"})," An advanced open-source relational database management system (RDBMS) that follows SQL standards closely. It offers features like ACID compliance, transactions, and advanced indexing. Well-suited for applications requiring complex queries, strong consistency, and data integrity."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"MySQL:"})," Popular open-source relational database."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Microsoft SQL Server:"})," Enterprise-grade database system by Microsoft."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Oracle Database:"})," Comprehensive database system with extensive features."]}),"\n"]}),"\n",(0,n.jsx)(e.h4,{id:"use-cases",children:"Use Cases:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"Applications requiring complex queries and transactions."}),"\n",(0,n.jsx)(e.li,{children:"Systems with structured data and well-defined relationships, such as financial systems, CRM systems, and enterprise applications."}),"\n"]}),"\n",(0,n.jsx)(e.h3,{id:"nosql-databases-non-relational-databases",children:"NoSQL Databases (Non-relational Databases)"}),"\n",(0,n.jsx)(e.p,{children:"NoSQL (Not Only SQL) databases handle unstructured or semi-structured data and can scale horizontally. They do not use traditional table structures and offer more flexibility with data models."}),"\n",(0,n.jsx)(e.h4,{id:"characteristics-1",children:"Characteristics:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Schema-less or Flexible Schema:"})," Data can be stored without a fixed schema or with a flexible schema."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Scalability:"})," Designed for horizontal scaling to handle large volumes of data and high traffic."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Variety of Data Models:"})," Includes document, key-value, column-family, and graph databases."]}),"\n"]}),"\n",(0,n.jsx)(e.h4,{id:"types-and-examples",children:"Types and Examples:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Document Stores:"})," Store data in JSON, BSON, or XML formats. Examples: MongoDB."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Key-Value Stores:"})," Store data as key-value pairs. Examples: Redis, DynamoDB."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Column-Family Stores:"})," Store data in columns rather than rows. Examples: Cassandra, HBase."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"Graph Databases:"})," Store data as nodes and edges to represent relationships. Examples: Neo4j, ArangoDB."]}),"\n"]}),"\n",(0,n.jsx)(e.h4,{id:"use-cases-1",children:"Use Cases:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"Applications with rapidly changing or unstructured data, such as content management systems, real-time analytics, and IoT applications."}),"\n",(0,n.jsx)(e.li,{children:"Systems requiring high scalability and flexibility, such as social networks, recommendation engines, and big data applications."}),"\n"]}),"\n",(0,n.jsx)(e.h3,{id:"comparison-of-postgresql-and-mongodb",children:"Comparison of PostgreSQL and MongoDB"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"PostgreSQL is an advanced open-source relational database that adheres to SQL standards. It offers strong consistency, complex querying capabilities, and robust indexing. It's suitable for applications with complex relationships and structured data."}),"\n",(0,n.jsx)(e.li,{children:"MongoDB is a NoSQL database that stores data in flexible, JSON-like documents. It provides high performance, horizontal scalability, and a flexible schema design. It's well-suited for scenarios requiring fast iteration, scalability, and the handling of unstructured or semi-structured data."}),"\n"]}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:"Summary:"})," PostgreSQL is ideal for applications needing detailed relationships and data integrity, while MongoDB is best for applications demanding scalability, flexibility, and handling diverse data formats."]})]})}function h(a={}){const{wrapper:e}={...(0,t.a)(),...a.components};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(c,{...a})}):c(a)}},1151:(a,e,s)=>{s.d(e,{a:()=>r});var n=s(7294);const t={},i=n.createContext(t);function r(a){const e=n.useContext(i);return n.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}}}]);